<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="Timeline" id="1" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="775" y="91">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="549" size="549">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" unit="0" />
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" unit="0" />
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="13" value="-68.15" />
                                        <Key frame="26" value="-68.15" />
                                        <Key frame="38" value="-68.15" />
                                        <Key frame="51" value="-68.15" />
                                        <Key frame="63" value="-68.15" />
                                        <Key frame="76" value="-66.7122" />
                                        <Key frame="88" value="-59.8567" />
                                        <Key frame="101" value="-50.1007" />
                                        <Key frame="113" value="-40.7842" />
                                        <Key frame="126" value="-31.0282" />
                                        <Key frame="138" value="-24.6121" />
                                        <Key frame="151" value="-19.8659" />
                                        <Key frame="163" value="-14.8561" />
                                        <Key frame="176" value="-13.5377" />
                                        <Key frame="188" value="-13.5377" />
                                        <Key frame="201" value="-13.5377" />
                                        <Key frame="213" value="-13.5377" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="13" value="1.84813" />
                                        <Key frame="26" value="1.84813" />
                                        <Key frame="38" value="1.84813" />
                                        <Key frame="51" value="1.84813" />
                                        <Key frame="63" value="1.84813" />
                                        <Key frame="76" value="1.67234" />
                                        <Key frame="88" value="1.67234" />
                                        <Key frame="101" value="1.145" />
                                        <Key frame="113" value="0.793436" />
                                        <Key frame="126" value="0.00240423" />
                                        <Key frame="138" value="-0.349159" />
                                        <Key frame="151" value="-1.31597" />
                                        <Key frame="163" value="-2.37068" />
                                        <Key frame="176" value="-2.28279" />
                                        <Key frame="188" value="-2.1949" />
                                        <Key frame="201" value="-2.1949" />
                                        <Key frame="213" value="-2.1949" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" unit="0">
                                        <Key frame="13" value="-6.67737" />
                                        <Key frame="26" value="-6.67737" />
                                        <Key frame="38" value="-6.67737" />
                                        <Key frame="51" value="-6.67737" />
                                        <Key frame="63" value="-6.67737" />
                                        <Key frame="76" value="-6.67737" />
                                        <Key frame="88" value="-6.67737" />
                                        <Key frame="101" value="-6.67737" />
                                        <Key frame="113" value="-6.67737" />
                                        <Key frame="126" value="-6.67737" />
                                        <Key frame="138" value="-6.67737" />
                                        <Key frame="151" value="-6.67737" />
                                        <Key frame="163" value="-6.67737" />
                                        <Key frame="176" value="-6.67737" />
                                        <Key frame="188" value="-6.67737" />
                                        <Key frame="201" value="-6.67737" />
                                        <Key frame="213" value="-6.67737" />
                                        <Key frame="226" value="-6.67737" />
                                        <Key frame="230" value="-6.06212" />
                                        <Key frame="238" value="-6.67737" />
                                        <Key frame="251" value="-6.67737" />
                                        <Key frame="263" value="-6.67737" />
                                        <Key frame="276" value="-6.67737" />
                                        <Key frame="288" value="-6.67737" />
                                        <Key frame="301" value="-6.67737" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" unit="0">
                                        <Key frame="13" value="-23.2058" />
                                        <Key frame="26" value="-23.2058" />
                                        <Key frame="38" value="-23.2058" />
                                        <Key frame="51" value="-23.2058" />
                                        <Key frame="63" value="-23.2058" />
                                        <Key frame="76" value="-23.2058" />
                                        <Key frame="88" value="-23.2058" />
                                        <Key frame="101" value="-23.2058" />
                                        <Key frame="113" value="-23.2058" />
                                        <Key frame="126" value="-23.2058" />
                                        <Key frame="138" value="-23.2058" />
                                        <Key frame="151" value="-23.2058" />
                                        <Key frame="163" value="-23.2058" />
                                        <Key frame="176" value="-23.2058" />
                                        <Key frame="188" value="-23.2058" />
                                        <Key frame="201" value="-23.2058" />
                                        <Key frame="213" value="-23.2058" />
                                        <Key frame="226" value="-23.2058" />
                                        <Key frame="230" value="-23.8211" />
                                        <Key frame="238" value="-23.2058" />
                                        <Key frame="251" value="-23.2058" />
                                        <Key frame="263" value="-23.2058" />
                                        <Key frame="276" value="-23.2058" />
                                        <Key frame="288" value="-23.2058" />
                                        <Key frame="301" value="-23.2058" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" unit="1">
                                        <Key frame="13" value="0.2944" />
                                        <Key frame="26" value="0.2948" />
                                        <Key frame="38" value="0.2948" />
                                        <Key frame="51" value="0.2948" />
                                        <Key frame="63" value="0.2948" />
                                        <Key frame="76" value="0.2948" />
                                        <Key frame="88" value="0.2948" />
                                        <Key frame="101" value="0.2948" />
                                        <Key frame="113" value="0.2948" />
                                        <Key frame="126" value="0.2948" />
                                        <Key frame="138" value="0.2948" />
                                        <Key frame="151" value="0.2948" />
                                        <Key frame="163" value="0.2948" />
                                        <Key frame="176" value="0.2948" />
                                        <Key frame="188" value="0.2948" />
                                        <Key frame="201" value="0.2944" />
                                        <Key frame="213" value="0.2948" />
                                        <Key frame="226" value="0.2948" />
                                        <Key frame="230" value="0.0108" />
                                        <Key frame="238" value="0.2948" />
                                        <Key frame="251" value="0.2944" />
                                        <Key frame="263" value="0.2944" />
                                        <Key frame="276" value="0.2944" />
                                        <Key frame="288" value="0.2948" />
                                        <Key frame="301" value="0.2948" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="13" value="-39.2852" />
                                        <Key frame="26" value="-39.461" />
                                        <Key frame="38" value="-39.7247" />
                                        <Key frame="51" value="-39.7247" />
                                        <Key frame="63" value="-39.5489" />
                                        <Key frame="76" value="-35.5937" />
                                        <Key frame="88" value="-29.9687" />
                                        <Key frame="101" value="-25.1346" />
                                        <Key frame="113" value="-21.4432" />
                                        <Key frame="126" value="-17.3123" />
                                        <Key frame="138" value="-14.1482" />
                                        <Key frame="151" value="-5.53478" />
                                        <Key frame="163" value="-1.93121" />
                                        <Key frame="176" value="0.178186" />
                                        <Key frame="188" value="0.266077" />
                                        <Key frame="201" value="0.178186" />
                                        <Key frame="213" value="0.178186" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" unit="0">
                                        <Key frame="13" value="-4.74374" />
                                        <Key frame="26" value="-4.56796" />
                                        <Key frame="38" value="-4.12851" />
                                        <Key frame="51" value="-3.86484" />
                                        <Key frame="63" value="-3.0738" />
                                        <Key frame="76" value="-2.81013" />
                                        <Key frame="88" value="-2.63435" />
                                        <Key frame="101" value="-2.54646" />
                                        <Key frame="113" value="-2.37068" />
                                        <Key frame="126" value="0.529749" />
                                        <Key frame="138" value="1.32078" />
                                        <Key frame="151" value="1.58445" />
                                        <Key frame="163" value="1.58445" />
                                        <Key frame="176" value="1.58445" />
                                        <Key frame="188" value="1.58445" />
                                        <Key frame="201" value="1.58445" />
                                        <Key frame="213" value="1.58445" />
                                        <Key frame="226" value="1.58445" />
                                        <Key frame="238" value="1.58445" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" unit="0">
                                        <Key frame="13" value="1.49656" />
                                        <Key frame="26" value="1.49656" />
                                        <Key frame="38" value="1.58445" />
                                        <Key frame="51" value="1.58445" />
                                        <Key frame="63" value="1.67234" />
                                        <Key frame="76" value="1.67234" />
                                        <Key frame="88" value="1.67234" />
                                        <Key frame="101" value="1.67234" />
                                        <Key frame="113" value="1.67234" />
                                        <Key frame="126" value="1.67234" />
                                        <Key frame="138" value="1.67234" />
                                        <Key frame="151" value="1.67234" />
                                        <Key frame="163" value="1.67234" />
                                        <Key frame="176" value="1.67234" />
                                        <Key frame="188" value="1.67234" />
                                        <Key frame="201" value="1.67234" />
                                        <Key frame="213" value="1.67234" />
                                        <Key frame="226" value="1.67234" />
                                        <Key frame="238" value="1.67234" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="13" value="121.04" />
                                        <Key frame="26" value="121.04" />
                                        <Key frame="38" value="121.04" />
                                        <Key frame="51" value="121.04" />
                                        <Key frame="63" value="121.04" />
                                        <Key frame="76" value="115.224" />
                                        <Key frame="88" value="102.128" />
                                        <Key frame="101" value="88.4167" />
                                        <Key frame="113" value="75.0571" />
                                        <Key frame="126" value="60.2034" />
                                        <Key frame="138" value="49.217" />
                                        <Key frame="151" value="37.4395" />
                                        <Key frame="163" value="26.3651" />
                                        <Key frame="176" value="24.1678" />
                                        <Key frame="188" value="24.1678" />
                                        <Key frame="201" value="24.1678" />
                                        <Key frame="213" value="24.1678" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" unit="0">
                                        <Key frame="13" value="69.9594" />
                                        <Key frame="26" value="69.9594" />
                                        <Key frame="38" value="69.9594" />
                                        <Key frame="51" value="69.9594" />
                                        <Key frame="63" value="69.9594" />
                                        <Key frame="76" value="69.9594" />
                                        <Key frame="88" value="69.9594" />
                                        <Key frame="101" value="69.9594" />
                                        <Key frame="113" value="69.9594" />
                                        <Key frame="126" value="69.9594" />
                                        <Key frame="138" value="69.9594" />
                                        <Key frame="151" value="69.9594" />
                                        <Key frame="163" value="69.9594" />
                                        <Key frame="176" value="69.9594" />
                                        <Key frame="188" value="70.1352" />
                                        <Key frame="201" value="70.6625" />
                                        <Key frame="213" value="70.7504" />
                                        <Key frame="226" value="70.8383" />
                                        <Key frame="230" value="71.7172" />
                                        <Key frame="238" value="70.9262" />
                                        <Key frame="251" value="70.8383" />
                                        <Key frame="263" value="70.9262" />
                                        <Key frame="276" value="70.9262" />
                                        <Key frame="288" value="70.9262" />
                                        <Key frame="301" value="70.9262" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" unit="0">
                                        <Key frame="13" value="0.876518" />
                                        <Key frame="26" value="0.788627" />
                                        <Key frame="38" value="0.876518" />
                                        <Key frame="51" value="0.876518" />
                                        <Key frame="63" value="0.876518" />
                                        <Key frame="76" value="0.876518" />
                                        <Key frame="88" value="0.876518" />
                                        <Key frame="101" value="0.876518" />
                                        <Key frame="113" value="0.876518" />
                                        <Key frame="126" value="0.788627" />
                                        <Key frame="138" value="0.876518" />
                                        <Key frame="151" value="0.876518" />
                                        <Key frame="163" value="0.876518" />
                                        <Key frame="176" value="0.876518" />
                                        <Key frame="188" value="0.876518" />
                                        <Key frame="201" value="0.788627" />
                                        <Key frame="213" value="0.788627" />
                                        <Key frame="226" value="0.788627" />
                                        <Key frame="230" value="0.261268" />
                                        <Key frame="238" value="0.788627" />
                                        <Key frame="251" value="0.876518" />
                                        <Key frame="263" value="0.788627" />
                                        <Key frame="276" value="0.788627" />
                                        <Key frame="288" value="0.700723" />
                                        <Key frame="301" value="0.700723" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" unit="0">
                                        <Key frame="13" value="-33.0497" />
                                        <Key frame="26" value="-32.9618" />
                                        <Key frame="38" value="-33.0497" />
                                        <Key frame="51" value="-33.0497" />
                                        <Key frame="63" value="-32.9618" />
                                        <Key frame="76" value="-33.0497" />
                                        <Key frame="88" value="-33.0497" />
                                        <Key frame="101" value="-32.9618" />
                                        <Key frame="113" value="-33.0497" />
                                        <Key frame="126" value="-32.9618" />
                                        <Key frame="138" value="-33.0497" />
                                        <Key frame="151" value="-33.0497" />
                                        <Key frame="163" value="-32.9618" />
                                        <Key frame="176" value="-32.9618" />
                                        <Key frame="188" value="-33.0497" />
                                        <Key frame="201" value="-32.9618" />
                                        <Key frame="213" value="-32.9618" />
                                        <Key frame="226" value="-32.9618" />
                                        <Key frame="230" value="-32.5223" />
                                        <Key frame="238" value="-32.9618" />
                                        <Key frame="251" value="-32.9618" />
                                        <Key frame="263" value="-33.0497" />
                                        <Key frame="276" value="-32.9618" />
                                        <Key frame="288" value="-32.9618" />
                                        <Key frame="301" value="-33.0497" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="13" value="-67.97" />
                                        <Key frame="26" value="-67.97" />
                                        <Key frame="38" value="-67.97" />
                                        <Key frame="51" value="-67.97" />
                                        <Key frame="63" value="-67.97" />
                                        <Key frame="76" value="-67.4984" />
                                        <Key frame="88" value="-60.2913" />
                                        <Key frame="101" value="-51.8537" />
                                        <Key frame="113" value="-42.6251" />
                                        <Key frame="126" value="-33.1328" />
                                        <Key frame="138" value="-26.8925" />
                                        <Key frame="151" value="-20.0369" />
                                        <Key frame="163" value="-11.3356" />
                                        <Key frame="176" value="-8.25942" />
                                        <Key frame="188" value="-8.25942" />
                                        <Key frame="201" value="-8.34731" />
                                        <Key frame="213" value="-8.34731" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="13" value="-4.34702" />
                                        <Key frame="26" value="-4.34702" />
                                        <Key frame="38" value="-4.34702" />
                                        <Key frame="51" value="-4.34702" />
                                        <Key frame="63" value="-4.34702" />
                                        <Key frame="76" value="-4.47519" />
                                        <Key frame="88" value="-5.53478" />
                                        <Key frame="101" value="-5.44688" />
                                        <Key frame="113" value="-5.2711" />
                                        <Key frame="126" value="-5.00743" />
                                        <Key frame="138" value="-4.83163" />
                                        <Key frame="151" value="-4.74374" />
                                        <Key frame="163" value="-4.83163" />
                                        <Key frame="176" value="-4.83163" />
                                        <Key frame="188" value="-4.83163" />
                                        <Key frame="201" value="-4.91954" />
                                        <Key frame="213" value="-4.91954" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="13" value="85.6089" />
                                        <Key frame="26" value="84.9937" />
                                        <Key frame="38" value="84.8179" />
                                        <Key frame="51" value="83.7632" />
                                        <Key frame="63" value="81.5659" />
                                        <Key frame="76" value="81.1265" />
                                        <Key frame="88" value="77.2592" />
                                        <Key frame="101" value="72.5131" />
                                        <Key frame="113" value="66.2728" />
                                        <Key frame="126" value="59.8567" />
                                        <Key frame="138" value="52.6496" />
                                        <Key frame="151" value="44.9151" />
                                        <Key frame="163" value="44.5635" />
                                        <Key frame="176" value="44.5635" />
                                        <Key frame="188" value="44.5635" />
                                        <Key frame="201" value="44.4756" />
                                        <Key frame="213" value="44.5635" />
                                        <Key frame="226" value="44.5635" />
                                        <Key frame="238" value="44.5635" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="13" value="103.358" />
                                        <Key frame="26" value="103.358" />
                                        <Key frame="38" value="103.358" />
                                        <Key frame="51" value="103.358" />
                                        <Key frame="63" value="103.27" />
                                        <Key frame="76" value="103.182" />
                                        <Key frame="88" value="103.095" />
                                        <Key frame="101" value="102.216" />
                                        <Key frame="113" value="100.37" />
                                        <Key frame="126" value="98.3484" />
                                        <Key frame="138" value="95.7117" />
                                        <Key frame="151" value="92.6355" />
                                        <Key frame="163" value="92.4597" />
                                        <Key frame="176" value="92.3718" />
                                        <Key frame="188" value="92.3718" />
                                        <Key frame="201" value="92.3718" />
                                        <Key frame="213" value="92.3718" />
                                        <Key frame="226" value="92.3718" />
                                        <Key frame="238" value="92.3718" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="1">
                                        <Key frame="13" value="0.3156" />
                                        <Key frame="26" value="0.3156" />
                                        <Key frame="38" value="0.3156" />
                                        <Key frame="51" value="0.3156" />
                                        <Key frame="63" value="0.3156" />
                                        <Key frame="76" value="0.3156" />
                                        <Key frame="88" value="0.3156" />
                                        <Key frame="101" value="0.3156" />
                                        <Key frame="113" value="0.3156" />
                                        <Key frame="126" value="0.3156" />
                                        <Key frame="138" value="0.3156" />
                                        <Key frame="151" value="0.3156" />
                                        <Key frame="163" value="0.3156" />
                                        <Key frame="176" value="0.3156" />
                                        <Key frame="188" value="0.3156" />
                                        <Key frame="201" value="0.3156" />
                                        <Key frame="213" value="0.3156" />
                                        <Key frame="226" value="0.3156" />
                                        <Key frame="238" value="0.3156" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="13" value="-39.9931" />
                                        <Key frame="26" value="-40.2568" />
                                        <Key frame="38" value="-40.5205" />
                                        <Key frame="51" value="-40.6084" />
                                        <Key frame="63" value="-40.2568" />
                                        <Key frame="76" value="-36.1259" />
                                        <Key frame="88" value="-30.6766" />
                                        <Key frame="101" value="-25.9305" />
                                        <Key frame="113" value="-22.6785" />
                                        <Key frame="126" value="-18.6354" />
                                        <Key frame="138" value="-15.9108" />
                                        <Key frame="151" value="-6.5064" />
                                        <Key frame="163" value="0.43705" />
                                        <Key frame="176" value="5.35899" />
                                        <Key frame="188" value="5.35899" />
                                        <Key frame="201" value="5.2711" />
                                        <Key frame="213" value="5.18321" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" unit="0">
                                        <Key frame="13" value="5.01224" />
                                        <Key frame="26" value="5.01224" />
                                        <Key frame="38" value="5.01224" />
                                        <Key frame="51" value="5.01224" />
                                        <Key frame="63" value="5.01224" />
                                        <Key frame="76" value="5.01224" />
                                        <Key frame="88" value="5.01224" />
                                        <Key frame="101" value="5.01224" />
                                        <Key frame="113" value="5.01224" />
                                        <Key frame="126" value="5.01224" />
                                        <Key frame="138" value="5.01224" />
                                        <Key frame="151" value="5.01224" />
                                        <Key frame="163" value="5.01224" />
                                        <Key frame="176" value="5.10013" />
                                        <Key frame="188" value="5.01224" />
                                        <Key frame="201" value="5.01224" />
                                        <Key frame="213" value="5.10013" />
                                        <Key frame="226" value="5.10013" />
                                        <Key frame="238" value="5.10013" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipYawPitch" recordable="1" mute="1" unit="0">
                                        <Key frame="13" value="1.49656" />
                                        <Key frame="26" value="1.49656" />
                                        <Key frame="38" value="1.58445" />
                                        <Key frame="51" value="1.58445" />
                                        <Key frame="63" value="1.67234" />
                                        <Key frame="76" value="1.67234" />
                                        <Key frame="88" value="1.67234" />
                                        <Key frame="101" value="1.67234" />
                                        <Key frame="113" value="1.67234" />
                                        <Key frame="126" value="1.67234" />
                                        <Key frame="138" value="1.67234" />
                                        <Key frame="151" value="1.67234" />
                                        <Key frame="163" value="1.67234" />
                                        <Key frame="176" value="1.67234" />
                                        <Key frame="188" value="1.67234" />
                                        <Key frame="201" value="1.67234" />
                                        <Key frame="213" value="1.67234" />
                                        <Key frame="226" value="1.67234" />
                                        <Key frame="238" value="1.67234" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="13" value="121.04" />
                                        <Key frame="26" value="121.04" />
                                        <Key frame="38" value="121.04" />
                                        <Key frame="51" value="121.04" />
                                        <Key frame="63" value="121.04" />
                                        <Key frame="76" value="116.635" />
                                        <Key frame="88" value="103.715" />
                                        <Key frame="101" value="90.5309" />
                                        <Key frame="113" value="77.5229" />
                                        <Key frame="126" value="62.7571" />
                                        <Key frame="138" value="52.298" />
                                        <Key frame="151" value="38.5869" />
                                        <Key frame="163" value="20.8327" />
                                        <Key frame="176" value="13.6256" />
                                        <Key frame="188" value="13.8014" />
                                        <Key frame="201" value="13.8014" />
                                        <Key frame="213" value="13.8014" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="13" value="13.0983" />
                                        <Key frame="26" value="8.35212" />
                                        <Key frame="38" value="3.43018" />
                                        <Key frame="51" value="-0.0854867" />
                                        <Key frame="63" value="-2.81013" />
                                        <Key frame="76" value="-7.3805" />
                                        <Key frame="88" value="-12.2146" />
                                        <Key frame="101" value="-18.9822" />
                                        <Key frame="113" value="-27.1561" />
                                        <Key frame="126" value="-37.3516" />
                                        <Key frame="138" value="-48.9533" />
                                        <Key frame="151" value="-52.3811" />
                                        <Key frame="163" value="-52.7326" />
                                        <Key frame="176" value="-52.9084" />
                                        <Key frame="188" value="-53.26" />
                                        <Key frame="201" value="-53.26" />
                                        <Key frame="213" value="-53.3479" />
                                        <Key frame="226" value="-53.4358" />
                                        <Key frame="238" value="-54.4026" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="13" value="-6.94585" />
                                        <Key frame="26" value="-9.14314" />
                                        <Key frame="38" value="-11.8678" />
                                        <Key frame="51" value="-14.944" />
                                        <Key frame="63" value="-16.6139" />
                                        <Key frame="76" value="-19.2507" />
                                        <Key frame="88" value="-21.8875" />
                                        <Key frame="101" value="-23.5574" />
                                        <Key frame="113" value="-24.0847" />
                                        <Key frame="126" value="-26.282" />
                                        <Key frame="138" value="-27.6004" />
                                        <Key frame="151" value="-27.2488" />
                                        <Key frame="163" value="-27.1609" />
                                        <Key frame="176" value="-26.8973" />
                                        <Key frame="188" value="-26.6336" />
                                        <Key frame="201" value="-26.3699" />
                                        <Key frame="213" value="-26.1941" />
                                        <Key frame="226" value="-26.1063" />
                                        <Key frame="238" value="-25.8426" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="13" value="3.16169" />
                                        <Key frame="26" value="3.16169" />
                                        <Key frame="38" value="4.30429" />
                                        <Key frame="51" value="9.66569" />
                                        <Key frame="63" value="9.66569" />
                                        <Key frame="76" value="9.66569" />
                                        <Key frame="88" value="9.66569" />
                                        <Key frame="101" value="9.66569" />
                                        <Key frame="113" value="9.66569" />
                                        <Key frame="126" value="9.66569" />
                                        <Key frame="138" value="9.66569" />
                                        <Key frame="151" value="9.66569" />
                                        <Key frame="163" value="9.66569" />
                                        <Key frame="176" value="9.66569" />
                                        <Key frame="188" value="9.66569" />
                                        <Key frame="201" value="9.66569" />
                                        <Key frame="213" value="9.66569" />
                                        <Key frame="226" value="9.66569" />
                                        <Key frame="238" value="9.66569" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Motor On/Off" id="3" localization="8" tooltip="Stiffen or loosen all motors." x="134" y="86">
                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy("ALMotion")

    def onUnload(self):
        pass

    def onInput_onSet(self):
        if( self.getParameter("Action") == "On" ):
            stiffness = 1
        else:
            stiffness = 0
        self.motion.post.stiffnessInterpolation("Body", stiffness, 0.1)
        time.sleep(0.1)
        self.onReady() #~ activate output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" />
                            <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="3" />
                            <Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="4">
                                <Choice value="Off" />
                                <Choice value="On" />
                            </Parameter>
                            <Resource name="All motors" type="Lock" timeout="0" />
                        </Box>
                        <Box name="movment" id="2" localization="8" tooltip="" x="341" y="142">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        # Choregraphe simplified export in Python.
        from naoqi import ALProxy
        names = list()
        times = list()
        keys = list()

        names.append("RElbowRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52])
        keys.append([1.5095, 1.5095, 1.5141, 1.52484, 1.53097, 1.47268, 1.25332, 1.21344, 1.2119, 1.21344, 1.4374, 1.54462, 1.54462, 1.54462, 1.54462, 1.54462, 1.54462])

        names.append("RElbowYaw")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52])
        keys.append([1.44345, 1.44192, 1.44345, 1.50328, 1.66128, 1.9328, 2.08567, 2.08567, 2.08567, 2.08567, 2.04785, 1.8699, 1.7886, 1.7886, 1.7886, 1.7886, 1.7886])

        names.append("RHand")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52])
        keys.append([0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3152, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156])

        names.append("RShoulderPitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52])
        keys.append([0.173384, 0.173384, 0.174918, 0.17185, 0.170316, 0.177986, 0.177986, 0.177986, 0.17952, 0.17952, 0.17952, 0.181054, 0.191792, 0.207132, 0.207132, 0.207132, 0.207132])

        names.append("RShoulderRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52])
        keys.append([0.309826, 0.309826, 0.28835, 0.11961, -0.0844119, -0.2869, -0.472514, -0.500126, -0.506262, -0.507796, -0.412688, -0.23321, -0.15651, -0.16418, -0.162646, -0.159578, -0.159578])

        names.append("RWristYaw")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52])
        keys.append([-0.431096, -0.431096, -0.431096, -0.283832, -0.159578, -0.112024, -0.112024, -0.112024, -0.112024, -0.112024, -0.00310993, 0.0352399, 0.0352399, 0.029104, 0.029104, 0.029104, 0.029104])

        """
        names.append("LAnklePitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04, 12.52, 13.04, 13.52, 14.04, 14.52, 15.04, 15.52, 16.04, 16.52, 17.04, 17.52, 18.04, 18.52, 19.04, 19.52, 20.04, 20.52, 21.04, 21.52])
        keys.append([-1.18944, -1.18944, -1.18944, -1.18944, -1.18944, -1.18944, -1.18944, -1.18944, -1.18944, -1.18944, -1.18944, -1.18944, -1.18944, -1.18944, -1.15208, -1.00635, -0.87749, -0.790052, -0.658128, -0.590632, -0.530806, -0.47098, -0.443368, -0.443368, -0.443368, -0.446436, -0.449504, -0.444902, -0.454106, -0.45564, -0.452572, -0.443368, -0.452572, -0.457174, -0.464844, -0.483252, -0.576826, -0.615176, -0.62438, -0.622846, -0.628982, -0.635118, -0.63972])
        """

        """
        names.append("LAnkleRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04, 12.52, 13.04, 13.52, 14.04, 14.52, 15.04, 15.52, 16.04, 16.52, 17.04, 17.52, 18.04, 18.52, 19.04, 19.52, 20.04, 20.52, 21.04, 21.52])
        keys.append([0.069072, 0.069072, 0.069072, 0.069072, 0.069072, 0.069072, 0.069072, 0.069072, 0.069072, 0.069072, 0.069072, 0.070606, 0.070606, 0.069072, 0.069072, 0.070606, 0.067538, 0.0598679, 0.0552659, 0.0337899, 0.0322559, 0.0307219, 0.0307219, 0.0307219, 0.0276539, 0.024586, 0.024586, 0.0276539, 0.0276539, 0.0276539, 0.0261199, 0.0261199, 0.0291879, 0.0291879, 0.0337899, 0.0383921, 0.0291879, 0.0307219, 0.0353239, 0.0337899, 0.0337899, 0.0337899, 0.0322559])
        """

        """
        names.append("LElbowRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.2, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04])
        keys.append([-0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.105804, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542])
        """

        """
        names.append("LElbowYaw")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.2, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04])
        keys.append([-0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.415756, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018])
        """

        """
        names.append("LHand")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.2, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04])
        keys.append([0.2944, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2944, 0.2948, 0.2948, 0.0108, 0.2948, 0.2944, 0.2944, 0.2944, 0.2948, 0.2948])
        """

        """
        names.append("LHipPitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04, 12.52, 13.04, 13.52, 14.04, 14.52, 15.04, 15.52, 16.04, 16.52, 17.04, 17.52, 18.04, 18.52, 19.04, 19.52, 20.04, 20.52, 21.04, 21.52])
        keys.append([-0.851328, -0.851328, -0.851328, -0.851328, -0.849794, -0.854396, -0.862066, -0.866668, -0.865134, -0.8636, -0.868202, -0.87894, -0.87894, -0.837522, -0.75622, -0.754686, -0.704064, -0.615092, -0.546062, -0.38806, -0.276078, -0.228524, -0.225456, -0.223922, -0.225456, -0.225456, -0.225456, -0.22699, -0.23466, -0.236194, -0.236194, -0.233126, -0.240796, -0.251534, -0.259204, -0.28068, -0.286816, -0.291418, -0.299088, -0.300622, -0.30369, -0.308292, -0.323632])
        """

        """
        names.append("LHipRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04, 12.52, 13.04, 13.52, 14.04, 14.52, 15.04, 15.52, 16.04, 16.52, 17.04, 17.52, 18.04, 18.52, 19.04, 19.52, 20.04, 20.52, 21.04, 21.52])
        keys.append([-0.0873961, -0.0873961, -0.0873961, -0.0873961, -0.0873961, -0.0873961, -0.0873961, -0.0873961, -0.0873961, -0.0873961, -0.0873961, -0.0873961, -0.0873961, -0.0858622, -0.0858622, -0.08126, -0.08126, -0.0705221, -0.0674541, -0.0459781, -0.0429101, -0.0413761, -0.0413761, -0.0429101, -0.0429101, -0.0413761, -0.0429101, -0.0429101, -0.0429101, -0.0429101, -0.0429101, -0.0459781, -0.049046, -0.0475121, -0.0475121, -0.0475121, -0.0475121, -0.0475121, -0.0475121, -0.049046, -0.049046, -0.049046, -0.049046])
        """

        """
        names.append("LHipYawPitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04, 12.52, 13.04, 13.52, 14.04, 14.52, 15.04, 15.52, 16.04, 16.52, 17.04, 17.52, 18.04, 18.52, 19.04, 19.52, 20.04, 20.52, 21.04, 21.52])
        keys.append([-0.25, -0.25, -0.25, -0.25, -0.25, -0.25, -0.25, -0.25, -0.25, -0.25, -0.25, -0.251534, -0.251534, -0.25, -0.25, -0.248466, -0.246932, -0.240796, -0.228524, -0.21932, -0.214718, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.213184, -0.213184, -0.213184, -0.213184])
        """

        """
        names.append("LKneePitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04, 12.52, 13.04, 13.52, 14.04, 14.52, 15.04, 15.52, 16.04, 16.52, 17.04, 17.52, 18.04, 18.52, 19.04, 19.52, 20.04, 20.52, 21.04, 21.52])
        keys.append([2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.07086, 1.93893, 1.76099, 1.5585, 1.37135, 1.16887, 0.983252, 0.831386, 0.747016, 0.7102, 0.711734, 0.708666, 0.705598, 0.707132, 0.708666, 0.708666, 0.708666, 0.7102, 0.720938, 0.753152, 0.753152, 0.768492, 0.814512, 0.938766, 0.987854, 1.0078, 1.0262, 1.03234, 1.03234, 1.05995])
        """

        """
        names.append("LShoulderPitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.2, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04])
        keys.append([1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22409, 1.23329, 1.23483, 1.23636, 1.2517, 1.2379, 1.23636, 1.2379, 1.2379, 1.2379, 1.2379])
        """

        """
        names.append("LShoulderRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.2, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04])
        keys.append([0.0152981, 0.0137641, 0.0152981, 0.0152981, 0.0152981, 0.0152981, 0.0152981, 0.0152981, 0.0152981, 0.0137641, 0.0152981, 0.0152981, 0.0152981, 0.0152981, 0.0152981, 0.0137641, 0.0137641, 0.0137641, 0.00455999, 0.0137641, 0.0152981, 0.0137641, 0.0137641, 0.0122299, 0.0122299])
        """

        """
        names.append("LWristYaw")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.2, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04])
        keys.append([-0.576826, -0.575292, -0.576826, -0.576826, -0.575292, -0.576826, -0.576826, -0.575292, -0.576826, -0.575292, -0.576826, -0.576826, -0.575292, -0.575292, -0.576826, -0.575292, -0.575292, -0.575292, -0.567622, -0.575292, -0.575292, -0.576826, -0.575292, -0.575292, -0.576826])
        """

        """
        names.append("RAnklePitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04, 12.52, 13.04, 13.52, 14.04, 14.52, 15.04, 15.52, 16.04, 16.52, 17.04, 17.52, 18.04, 18.52, 19.04, 19.52, 20.04, 20.52, 21.04, 21.52])
        keys.append([-1.1863, -1.1863, -1.1863, -1.1863, -1.1863, -1.1863, -1.1863, -1.1863, -1.1863, -1.1863, -1.1863, -1.1863, -1.1863, -1.1863, -1.175, -1.03387, -0.898882, -0.797638, -0.67185, -0.604354, -0.539926, -0.486236, -0.454022, -0.454022, -0.455556, -0.463226, -0.467828, -0.455556, -0.461692, -0.469362, -0.469362, -0.466294, -0.470896, -0.475498, -0.477032, -0.481634, -0.599752, -0.642704, -0.64117, -0.64884, -0.65651, -0.66418, -0.673384])
        """

        """
        names.append("RAnkleRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04, 12.52, 13.04, 13.52, 14.04, 14.52, 15.04, 15.52, 16.04, 16.52, 17.04, 17.52, 18.04, 18.52, 19.04, 19.52, 20.04, 20.52, 21.04, 21.52])
        keys.append([-0.0758697, -0.0758697, -0.0758697, -0.0758697, -0.0758697, -0.0758697, -0.0758697, -0.0758697, -0.0758697, -0.0758697, -0.0758697, -0.0758697, -0.0758697, -0.075124, -0.0689881, -0.0659201, -0.0659201, -0.05058, -0.0444441, -0.0429101, -0.0429101, -0.0429101, -0.0429101, -0.0444441, -0.0444441, -0.0444441, -0.0444441, -0.0429101, -0.0429101, -0.0429101, -0.0429101, -0.0444441, -0.0429101, -0.0429101, -0.0398421, -0.0337059, -0.0383081, -0.0383081, -0.0352399, -0.0367742, -0.0352399, -0.0352399, -0.0367742])
        """

        """
        names.append("RHipPitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04, 12.52, 13.04, 13.52, 14.04, 14.52, 15.04, 15.52, 16.04, 16.52, 17.04, 17.52, 18.04, 18.52, 19.04, 19.52, 20.04, 20.52, 21.04, 21.52])
        keys.append([-0.842208, -0.840674, -0.840674, -0.842208, -0.842208, -0.84681, -0.857548, -0.860616, -0.857548, -0.852946, -0.860616, -0.872888, -0.866752, -0.814596, -0.730226, -0.722556, -0.676536, -0.57836, -0.504728, -0.329852, -0.200996, -0.138102, -0.131966, -0.130432, -0.131966, -0.131966, -0.136568, -0.14117, -0.153442, -0.154976, -0.158044, -0.16418, -0.177986, -0.188724, -0.188724, -0.20253, -0.230142, -0.230142, -0.230142, -0.24088, -0.245482, -0.251618, -0.273094])
        """

        """
        names.append("RHipRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04, 12.52, 13.04, 13.52, 14.04, 14.52, 15.04, 15.52, 16.04, 16.52, 17.04, 17.52, 18.04, 18.52, 19.04, 19.52, 20.04, 20.52, 21.04, 21.52])
        keys.append([0.0598679, 0.0598679, 0.0598679, 0.0598679, 0.0598679, 0.0598679, 0.0598679, 0.0598679, 0.0598679, 0.0598679, 0.0598679, 0.0598679, 0.0598679, 0.0598679, 0.0583339, 0.0583339, 0.0583339, 0.0583339, 0.0583339, 0.0583339, 0.0567999, 0.0567999, 0.0567999, 0.0567999, 0.0567999, 0.0567999, 0.0567999, 0.0567999, 0.0567999, 0.0567999, 0.0583339, 0.0567999, 0.0583339, 0.0583339, 0.0567999, 0.0583339, 0.0567999, 0.0567999, 0.0567999, 0.0567999, 0.0552659, 0.0567999, 0.0567999])
        """

        """
        names.append("RHipYawPitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04, 12.52, 13.04, 13.52, 14.04, 14.52, 15.04, 15.52, 16.04, 16.52, 17.04, 17.52, 18.04, 18.52, 19.04, 19.52, 20.04, 20.52, 21.04, 21.52])
        keys.append([-0.25, -0.25, -0.25, -0.25, -0.25, -0.25, -0.25, -0.25, -0.25, -0.25, -0.25, -0.251534, -0.251534, -0.25, -0.25, -0.248466, -0.246932, -0.240796, -0.228524, -0.21932, -0.214718, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.21165, -0.213184, -0.213184, -0.213184, -0.213184])
        """

        """
        names.append("RKneePitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04, 12.52, 13.04, 13.52, 14.04, 14.52, 15.04, 15.52, 16.04, 16.52, 17.04, 17.52, 18.04, 18.52, 19.04, 19.52, 20.04, 20.52, 21.04, 21.52])
        keys.append([2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.07248, 1.94669, 1.75954, 1.55705, 1.3561, 1.1398, 0.937316, 0.760906, 0.66273, 0.627448, 0.627448, 0.627448, 0.628982, 0.636652, 0.636652, 0.635118, 0.636652, 0.644322, 0.673468, 0.702614, 0.702614, 0.702614, 0.73176, 0.898966, 0.948054, 0.951122, 0.987938, 0.997142, 0.997142, 1.03549])
        """

        try:
          # uncomment the following line and modify the IP if you use this script outside Choregraphe.
          # motion = ALProxy("ALMotion", IP, 9559)
          motion = ALProxy("ALMotion")
          motion.angleInterpolation(names, keys, times, True)
        except BaseException, err:
          print err

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Box name="poteau" id="4" localization="8" tooltip="" x="545" y="221">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        # Choregraphe simplified export in Python.
        # Choregraphe simplified export in Python.
        from naoqi import ALProxy
        names = list()
        times = list()
        keys = list()

        names.append("LAnklePitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52])
        keys.append([-1.18944, -1.18944, -1.18944, -1.18944, -1.18944, -1.16435, -1.0447, -0.874422, -0.711818, -0.541544, -0.429562, -0.346726, -0.259288, -0.236278, -0.236278, -0.236278, -0.236278])

        names.append("LAnkleRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52])
        keys.append([0.0322559, 0.0322559, 0.0322559, 0.0322559, 0.0322559, 0.0291879, 0.0291879, 0.019984, 0.0138481, 4.19617e-05, -0.00609398, -0.0229681, -0.0413761, -0.0398421, -0.0383081, -0.0383081, -0.0383081])

        names.append("LHipPitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52])
        keys.append([-0.685656, -0.688724, -0.693326, -0.693326, -0.690258, -0.621228, -0.523052, -0.438682, -0.374254, -0.302156, -0.246932, -0.0966001, -0.0337059, 0.00310993, 0.00464392, 0.00310993, 0.00310993])

        """
        names.append("LHipRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52])
        keys.append([-0.082794, -0.079726, -0.0720561, -0.0674541, -0.053648, -0.049046, -0.0459781, -0.0444441, -0.0413761, 0.00924587, 0.023052, 0.0276539, 0.0276539, 0.0276539, 0.0276539, 0.0276539, 0.0276539, 0.0276539, 0.0276539])
        """

        """
        names.append("LHipYawPitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52])
        keys.append([0.0261199, 0.0261199, 0.0276539, 0.0276539, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879])
        """

        names.append("LKneePitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52])
        keys.append([2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.01103, 1.78247, 1.54316, 1.30999, 1.05075, 0.858998, 0.653442, 0.460158, 0.421808, 0.421808, 0.421808, 0.421808])

        names.append("RAnklePitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52])
        keys.append([-1.1863, -1.1863, -1.1863, -1.1863, -1.1863, -1.17807, -1.05228, -0.905018, -0.743948, -0.578276, -0.469362, -0.34971, -0.197844, -0.144154, -0.144154, -0.145688, -0.145688])

        names.append("RAnkleRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52])
        keys.append([-0.0758697, -0.0758697, -0.0758697, -0.0758697, -0.0758697, -0.0781068, -0.0966001, -0.0950661, -0.0919981, -0.0873961, -0.0843279, -0.082794, -0.0843279, -0.0843279, -0.0843279, -0.0858622, -0.0858622])
        """
        names.append("RElbowRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52])
        keys.append([1.49416, 1.48342, 1.48035, 1.46194, 1.42359, 1.41592, 1.34843, 1.26559, 1.15668, 1.0447, 0.918908, 0.783916, 0.77778, 0.77778, 0.77778, 0.776246, 0.77778, 0.77778, 0.77778])

        names.append("RElbowYaw")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52])
        keys.append([1.80394, 1.80394, 1.80394, 1.80394, 1.80241, 1.80087, 1.79934, 1.784, 1.75179, 1.7165, 1.67048, 1.61679, 1.61373, 1.61219, 1.61219, 1.61219, 1.61219, 1.61219, 1.61219])

        names.append("RHand")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52])
        keys.append([0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156, 0.3156])
        """
        names.append("RHipPitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52])
        keys.append([-0.698012, -0.702614, -0.707216, -0.70875, -0.702614, -0.630516, -0.535408, -0.452572, -0.395814, -0.32525, -0.277696, -0.113558, 0.00762796, 0.0935321, 0.0935321, 0.0919981, 0.0904641])

        """
        names.append("RHipRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52])
        keys.append([0.0874801, 0.0874801, 0.0874801, 0.0874801, 0.0874801, 0.0874801, 0.0874801, 0.0874801, 0.0874801, 0.0874801, 0.0874801, 0.0874801, 0.0874801, 0.0890141, 0.0874801, 0.0874801, 0.0890141, 0.0890141, 0.0890141])
        """

        """
        names.append("RHipYawPitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52])
        keys.append([0.0261199, 0.0261199, 0.0276539, 0.0276539, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879, 0.0291879])
        """

        names.append("RKneePitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52])
        keys.append([2.11255, 2.11255, 2.11255, 2.11255, 2.11255, 2.03566, 1.81016, 1.58006, 1.35303, 1.09532, 0.912772, 0.673468, 0.3636, 0.237812, 0.24088, 0.24088, 0.24088])
        """
        names.append("RShoulderPitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52])
        keys.append([0.228608, 0.145772, 0.0598679, -0.00149202, -0.049046, -0.128814, -0.213184, -0.331302, -0.473964, -0.651908, -0.854396, -0.914222, -0.920358, -0.923426, -0.929562, -0.929562, -0.931096, -0.93263, -0.949504])

        names.append("RShoulderRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52])
        keys.append([-0.121228, -0.159578, -0.207132, -0.260822, -0.289968, -0.335988, -0.382008, -0.411154, -0.420358, -0.458708, -0.481718, -0.475582, -0.474048, -0.469446, -0.464844, -0.460242, -0.457174, -0.45564, -0.451038])

        names.append("RWristYaw")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.52])
        keys.append([0.055182, 0.055182, 0.075124, 0.168698, 0.168698, 0.168698, 0.168698, 0.168698, 0.168698, 0.168698, 0.168698, 0.168698, 0.168698, 0.168698, 0.168698, 0.168698, 0.168698, 0.168698, 0.168698])
        """
        """
        names.append("LElbowRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.2, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04])
        keys.append([-0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.105804, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542, -0.116542])
        """

        """
        names.append("LElbowYaw")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.2, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04])
        keys.append([-0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.415756, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018, -0.405018])
        """

        """
        names.append("LHand")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.2, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04])
        keys.append([0.2944, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2948, 0.2944, 0.2948, 0.2948, 0.0108, 0.2948, 0.2944, 0.2944, 0.2944, 0.2948, 0.2948])
        """

        """
        names.append("LShoulderPitch")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.2, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04])
        keys.append([1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22102, 1.22409, 1.23329, 1.23483, 1.23636, 1.2517, 1.2379, 1.23636, 1.2379, 1.2379, 1.2379, 1.2379])
        """

        """
        names.append("LShoulderRoll")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.2, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04])
        keys.append([0.0152981, 0.0137641, 0.0152981, 0.0152981, 0.0152981, 0.0152981, 0.0152981, 0.0152981, 0.0152981, 0.0137641, 0.0152981, 0.0152981, 0.0152981, 0.0152981, 0.0152981, 0.0137641, 0.0137641, 0.0137641, 0.00455999, 0.0137641, 0.0152981, 0.0137641, 0.0137641, 0.0122299, 0.0122299])
        """

        """
        names.append("LWristYaw")
        times.append([0.52, 1.04, 1.52, 2.04, 2.52, 3.04, 3.52, 4.04, 4.52, 5.04, 5.52, 6.04, 6.52, 7.04, 7.52, 8.04, 8.52, 9.04, 9.2, 9.52, 10.04, 10.52, 11.04, 11.52, 12.04])
        keys.append([-0.576826, -0.575292, -0.576826, -0.576826, -0.575292, -0.576826, -0.576826, -0.575292, -0.576826, -0.575292, -0.576826, -0.576826, -0.575292, -0.575292, -0.576826, -0.575292, -0.575292, -0.575292, -0.567622, -0.575292, -0.575292, -0.576826, -0.575292, -0.575292, -0.576826])
        """

        try:
          # uncomment the following line and modify the IP if you use this script outside Choregraphe.
          # motion = ALProxy("ALMotion", IP, 9559)
          motion = ALProxy("ALMotion")
          motion.angleInterpolation(names, keys, times, True)
        except BaseException, err:
          print err
        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Box name="Rest" id="5" localization="0" tooltip="Call a Rest process.&#x0A;Apply crouch posture if the robot is Stand then unStiff all joints" x="111" y="425">
                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.motion.rest()
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Resource name="All motors" type="Lock" timeout="0" />
                            <Resource name="Stiffness" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Motor On/Off (1)" id="6" localization="8" tooltip="Stiffen or loosen all motors." x="198" y="313">
                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy("ALMotion")

    def onUnload(self):
        pass

    def onInput_onSet(self):
        if( self.getParameter("Action") == "On" ):
            stiffness = 1
        else:
            stiffness = 0
        self.motion.post.stiffnessInterpolation("Body", stiffness, 0.1)
        time.sleep(0.1)
        self.onReady() #~ activate output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" />
                            <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="3" />
                            <Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="4">
                                <Choice value="Off" />
                                <Choice value="On" />
                            </Parameter>
                            <Resource name="All motors" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Rest (1)" id="7" localization="0" tooltip="Call a Rest process.&#x0A;Apply crouch posture if the robot is Stand then unStiff all joints" x="860" y="225">
                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.motion.rest()
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Resource name="All motors" type="Lock" timeout="0" />
                            <Resource name="Stiffness" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Say" id="8" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="286" y="644">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : " مرحبا ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Je vais faire le socle, Mooorrai ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <arabic>
                                                        <![CDATA[مرحبا]]>
</arabic>
                                                    <czech>
                                                        <![CDATA[Ahoj]]>
</czech>
                                                    <danish>
                                                        <![CDATA[Hej]]>
</danish>
                                                    <german>
                                                        <![CDATA[Hallo]]>
</german>
                                                    <greek>
                                                        <![CDATA[]]>
</greek>
                                                    <english>
                                                        <![CDATA[Hello]]>
</english>
                                                    <spanish>
                                                        <![CDATA[Hola]]>
</spanish>
                                                    <finnish>
                                                        <![CDATA[Hei]]>
</finnish>
                                                    <french>
                                                        <![CDATA[Je vais faire le socle, Mooorrai]]>
</french>
                                                    <italian>
                                                        <![CDATA[Ciao]]>
</italian>
                                                    <japanese>
                                                        <![CDATA[こんにちは]]>
</japanese>
                                                    <korean>
                                                        <![CDATA[안녕하세요]]>
</korean>
                                                    <dutch>
                                                        <![CDATA[Hallo]]>
</dutch>
                                                    <norwegian>
                                                        <![CDATA[]]>
</norwegian>
                                                    <polish>
                                                        <![CDATA[Cześć]]>
</polish>
                                                    <brazilian>
                                                        <![CDATA[Olá]]>
</brazilian>
                                                    <portuguese>
                                                        <![CDATA[Olá]]>
</portuguese>
                                                    <russian>
                                                        <![CDATA[Привет]]>
</russian>
                                                    <swedish>
                                                        <![CDATA[Hallå]]>
</swedish>
                                                    <turkish>
                                                        <![CDATA[Merhaba]]>
</turkish>
                                                    <chinese>
                                                        <![CDATA[]]>
</chinese>
                                                    <language>8</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Speech" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Say (1)" id="9" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="506" y="654">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : " مرحبا ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Je vais faire le poteau ma gueule ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <arabic>
                                                        <![CDATA[مرحبا]]>
</arabic>
                                                    <czech>
                                                        <![CDATA[Ahoj]]>
</czech>
                                                    <danish>
                                                        <![CDATA[Hej]]>
</danish>
                                                    <german>
                                                        <![CDATA[Hallo]]>
</german>
                                                    <greek>
                                                        <![CDATA[]]>
</greek>
                                                    <english>
                                                        <![CDATA[Hello]]>
</english>
                                                    <spanish>
                                                        <![CDATA[Hola]]>
</spanish>
                                                    <finnish>
                                                        <![CDATA[Hei]]>
</finnish>
                                                    <french>
                                                        <![CDATA[Je vais faire le poteau ma gueule]]>
</french>
                                                    <italian>
                                                        <![CDATA[Ciao]]>
</italian>
                                                    <japanese>
                                                        <![CDATA[こんにちは]]>
</japanese>
                                                    <korean>
                                                        <![CDATA[안녕하세요]]>
</korean>
                                                    <dutch>
                                                        <![CDATA[Hallo]]>
</dutch>
                                                    <norwegian>
                                                        <![CDATA[]]>
</norwegian>
                                                    <polish>
                                                        <![CDATA[Cześć]]>
</polish>
                                                    <brazilian>
                                                        <![CDATA[Olá]]>
</brazilian>
                                                    <portuguese>
                                                        <![CDATA[Olá]]>
</portuguese>
                                                    <russian>
                                                        <![CDATA[Привет]]>
</russian>
                                                    <swedish>
                                                        <![CDATA[Hallå]]>
</swedish>
                                                    <turkish>
                                                        <![CDATA[Merhaba]]>
</turkish>
                                                    <chinese>
                                                        <![CDATA[]]>
</chinese>
                                                    <language>8</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Speech" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Say (2)" id="11" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="790" y="417">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : " مرحبا ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Wala as-tu le stylo ? ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <arabic>
                                                        <![CDATA[مرحبا]]>
</arabic>
                                                    <czech>
                                                        <![CDATA[Ahoj]]>
</czech>
                                                    <danish>
                                                        <![CDATA[Hej]]>
</danish>
                                                    <german>
                                                        <![CDATA[Hallo]]>
</german>
                                                    <greek>
                                                        <![CDATA[]]>
</greek>
                                                    <english>
                                                        <![CDATA[Hello]]>
</english>
                                                    <spanish>
                                                        <![CDATA[Hola]]>
</spanish>
                                                    <finnish>
                                                        <![CDATA[Hei]]>
</finnish>
                                                    <french>
                                                        <![CDATA[Wala as-tu le stylo ?]]>
</french>
                                                    <italian>
                                                        <![CDATA[Ciao]]>
</italian>
                                                    <japanese>
                                                        <![CDATA[こんにちは]]>
</japanese>
                                                    <korean>
                                                        <![CDATA[안녕하세요]]>
</korean>
                                                    <dutch>
                                                        <![CDATA[Hallo]]>
</dutch>
                                                    <norwegian>
                                                        <![CDATA[]]>
</norwegian>
                                                    <polish>
                                                        <![CDATA[Cześć]]>
</polish>
                                                    <brazilian>
                                                        <![CDATA[Olá]]>
</brazilian>
                                                    <portuguese>
                                                        <![CDATA[Olá]]>
</portuguese>
                                                    <russian>
                                                        <![CDATA[Привет]]>
</russian>
                                                    <swedish>
                                                        <![CDATA[Hallå]]>
</swedish>
                                                    <turkish>
                                                        <![CDATA[Merhaba]]>
</turkish>
                                                    <chinese>
                                                        <![CDATA[]]>
</chinese>
                                                    <language>8</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Speech" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Tactile Head" id="12" localization="8" tooltip="Detect touch on head tactile sensor." x="1094" y="612">
                            <bitmap>media/images/box/sensors/tactileHead.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                            <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                            <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" />
                            <Output name="frontTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The front tactile head sensor was touched." id="8" />
                            <Output name="middleTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The middle tactile head sensor was touched." id="9" />
                            <Output name="rearTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The rear tactile head sensor was touched." id="10" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="If &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="260" y="17">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="256" y="119">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="If &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="261" y="223">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="5" />
                                            <Link inputowner="0" indexofinput="9" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" />
                                            <Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Head-sequence" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Motor On/Off (2)" id="10" localization="8" tooltip="Stiffen or loosen all motors." x="134" y="690">
                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy("ALMotion")

    def onUnload(self):
        pass

    def onInput_onSet(self):
        if( self.getParameter("Action") == "On" ):
            stiffness = 1
        else:
            stiffness = 0
        self.motion.post.stiffnessInterpolation("Body", stiffness, 0.1)
        time.sleep(0.1)
        self.onReady() #~ activate output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" />
                            <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="3" />
                            <Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="4">
                                <Choice value="Off" />
                                <Choice value="On" />
                            </Parameter>
                            <Resource name="All motors" type="Lock" timeout="0" />
                        </Box>
                        <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="4" />
                        <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="3" />
                        <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="4" />
                        <Link inputowner="4" indexofinput="2" outputowner="9" indexofoutput="4" />
                        <Link inputowner="11" indexofinput="2" outputowner="4" indexofoutput="4" />
                        <Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="4" />
                        <Link inputowner="7" indexofinput="2" outputowner="12" indexofoutput="9" />
                        <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="3" />
                        <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
